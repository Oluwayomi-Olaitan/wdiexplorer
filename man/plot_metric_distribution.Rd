% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_metric_distribution.R
\name{plot_metric_distribution}
\alias{plot_metric_distribution}
\title{Plot distribution(s) of diagnostic metric(s)}
\usage{
plot_metric_distribution(
  metric_summary,
  colour_var,
  metric_var = NULL,
  group_var = NULL
)
}
\arguments{
\item{metric_summary}{A data frame containing computed diagnostic metrics and the pre-defined grouping information,
generated by passing the output of any diagnostic metrics function to \code{\link{add_group_info}}}

\item{colour_var}{A variable in \code{metric_summary} data frame whose levels are mapped to distinct colours in the resulting plot}

\item{metric_var}{Character string or vector of character strings specifying metric variable name(s) in \code{metric_summary} to plot
If \code{NULL} (default), distributions are plotted for all metric variables in \code{metric_summary}
Is specified, only the distribution for the specified metric(s) will be plotted}

\item{group_var}{A grouping variable in the WDI data set (e.g., "region" or "income")
Default to \code{NULL}
If \code{NULL}, distributions are ungrouped and if specified, distributions are grouped by the levels of the variable}
}
\value{
A \code{ggplot} object displaying either the ungrouped or grouped distribution of metric(s) in \code{metric_summary}.
Each metric is displayed in a separate facet panel; if one metric is specified, a single panel is shown.
}
\description{
Generates faceted \code{ggplot} displaying the distribution of either selected metric(s) or all the set of diagnostic indices.
By default, distribution(s) are ungrouped; if a \code{group_var} is specified, distributions are grouped by its levels within each panel.
If only one metric is specified in \code{metric_var}, a single panel is displayed.
}
\examples{
pm_data <- get_wdi_data(indicator = "EN.ATM.PM25.MC.M3")
pm_diagnostic_metrics <- compute_diagnostic_indices(pm_data, group_var = "region")
pm_diagnostic_metrics_group <- add_group_info(metric_summary = pm_diagnostic_metrics,pm_data)
plot_metric_distribution(pm_diagnostic_metrics_group, colour_var = "region", group_var = "region")
}
